const canvas = document.querySelector("#paintField"); // –≠–ª–µ–º–µ–Ω—Ç canvas, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ä–∏—Å–æ–≤–∞–Ω–∏–µ
const clearBtn = document.querySelector("#clear"); // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ø–æ–ª—è
const sadBtn = document.querySelector("#sad"); // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏ –≥—Ä—É—Å—Ç–Ω–æ–≥–æ —Ä–∏—Å—É–Ω–∫–∞
const happyBtn = document.querySelector("#happy"); // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏ —Å—á–∞—Å—Ç–ª–∏–≤–æ–≥–æ —Ä–∏—Å—É–Ω–∫–∞
const trainBtn = document.querySelector("#train"); // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –æ–±—É—á–µ–Ω–∏—è –Ω–µ–π—Ä–æ–Ω–Ω–æ–π —Å–µ—Ç–∏
const predictBtn = document.querySelector("#predict"); // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–≥–æ —Ä–∏—Å—É–Ω–∫–∞
const ctx = canvas.getContext("2d"); // –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è –Ω–∞ canvas
const paintField = new Array(100).fill(false); // –ú–∞—Å—Å–∏–≤, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π –ø–æ–ª–µ —Ä–∏—Å–æ–≤–∞–Ω–∏—è (10x10)
const trainData = []; // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ–±—É—á–µ–Ω–∏—è
let mouseDown = false; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–∞–∂–∞—Ç–∏—è –º—ã—à–∏
let happyCount = 0; // –°—á–µ—Ç—á–∏–∫ –¥–ª—è —Å—á–∞—Å—Ç–ª–∏–≤—ã—Ö —Ä–∏—Å—É–Ω–∫–æ–≤
let sadCount = 0; // –°—á–µ—Ç—á–∏–∫ –¥–ª—è –≥—Ä—É—Å—Ç–Ω—ã—Ö —Ä–∏—Å—É–Ω–∫–æ–≤

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è —Å–µ—Ç–∫–∏ –Ω–∞ canvas
function drawGrid() {
  ctx.strokeStyle = "#CCC"; // –¶–≤–µ—Ç –ª–∏–Ω–∏–π —Å–µ—Ç–∫–∏

  for (let i = 1; i < 10; i++) {
    // –†–∏—Å–æ–≤–∞–Ω–∏–µ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã—Ö –∏ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã—Ö –ª–∏–Ω–∏–π —Å–µ—Ç–∫–∏
    ctx.moveTo(0, i * 40);
    ctx.lineTo(400, i * 40);
    ctx.moveTo(i * 40, 0);
    ctx.lineTo(i * 40, 400);
  }

  ctx.stroke(); // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–∞ canvas
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ canvas
function clearCanvas() {
  ctx.fillStyle = "#FFF"; // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–µ–ª–æ–≥–æ —Ñ–æ–Ω–∞
  ctx.fillRect(0, 0, 400, 400); // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Å–µ–≥–æ canvas –±–µ–ª—ã–º —Ü–≤–µ—Ç–æ–º
  drawGrid(); // –†–∏—Å–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–∫–∏
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è –∫–≤–∞–¥—Ä–∞—Ç–∞ –Ω–∞ canvas
function drawSquare(row, column, color) {
  ctx.fillStyle = color; // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ü–≤–µ—Ç–∞ –∑–∞–ª–∏–≤–∫–∏
  ctx.fillRect(column * 40 + 1, row * 40 + 1, 38, 38); // –†–∏—Å–æ–≤–∞–Ω–∏–µ –∫–≤–∞–¥—Ä–∞—Ç–∞ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π —è—á–µ–π–∫–µ
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è –Ω–∞ canvas –ø—Ä–∏ –¥–≤–∏–∂–µ–Ω–∏–∏ –º—ã—à–∏
function draw(event) {
  const rowIndex = Math.floor(event.offsetY / 40); // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–∑–∏—Ü–∏–∏ –º—ã—à–∏
  const columnIndex = Math.floor(event.offsetX / 40); // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–∑–∏—Ü–∏–∏ –º—ã—à–∏
  const arrayIndex = rowIndex * 10 + columnIndex; // –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞ –≤ –º–∞—Å—Å–∏–≤–µ paintField
  paintField[arrayIndex] = true; // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —è—á–µ–π–∫–∏
  drawSquare(rowIndex, columnIndex, "green"); // –†–∏—Å–æ–≤–∞–Ω–∏–µ –∑–µ–ª–µ–Ω–æ–≥–æ –∫–≤–∞–¥—Ä–∞—Ç–∞ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π —è—á–µ–π–∫–µ
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ø–æ–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è
function clearField() {
  paintField.fill(false); // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ false
  clearCanvas(); // –û—á–∏—Å—Ç–∫–∞ canvas
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ (—Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–æ–∫)
function updateInterface() {
  happyBtn.innerText = `üòÄ ${happyCount}`; // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏ happy
  sadBtn.innerText = `üôÅ ${sadCount}`; // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏ sad
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –æ–±—É—á–µ–Ω–∏—è
function storeResult(value) {
  trainData.push({ paintField: [...paintField], label: value }); // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—è –∏ –º–µ—Ç–∫–∏ –≤ –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö –æ–±—É—á–µ–Ω–∏—è
  updateInterface(); // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –º—ã—à—å—é –∏ –∫–Ω–æ–ø–∫–∞–º–∏
document.addEventListener("mousedown", () => (mouseDown = true)); // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –º—ã—à–∏
document.addEventListener("mouseup", () => (mouseDown = false)); // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—É—Å–∫–∞–Ω–∏—è –º—ã—à–∏

canvas.addEventListener("mousemove", (e) => {
  if (mouseDown) draw(e); // –ï—Å–ª–∏ –º—ã—à—å –Ω–∞–∂–∞—Ç–∞, —Ä–∏—Å–æ–≤–∞—Ç—å
});

clearBtn.addEventListener("click", clearField); // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –æ—á–∏—Å—Ç–∫–∏

happyBtn.addEventListener("click", () => {
  happyCount += 1; // –£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ —Å—á–∞—Å—Ç–ª–∏–≤—ã—Ö —Ä–∏—Å—É–Ω–∫–æ–≤
  storeResult([1, 0]); // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Ä–∏—Å—É–Ω–∫–∞ –∫–∞–∫ —Å—á–∞—Å—Ç–ª–∏–≤–æ–≥–æ
  clearField(); // –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è
});

sadBtn.addEventListener("click", () => {
  sadCount += 1; // –£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –≥—Ä—É—Å—Ç–Ω—ã—Ö —Ä–∏—Å—É–Ω–∫–æ–≤
  storeResult([0, 1]); // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Ä–∏—Å—É–Ω–∫–∞ –∫–∞–∫ –≥—Ä—É—Å—Ç–Ω–æ–≥–æ
  clearField(); // –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è
});

predictBtn.addEventListener("click", () => {
  const inputTensor = preprocessDrawing(paintField);
  const prediction = model.predict(inputTensor);
  const [happiness, sadness] = prediction.dataSync();

  alert(
    `–Ø –¥—É–º–∞—é —ç—Ç–æ ${
      happiness > sadness ? "—Å—á–∞—Å—Ç–ª–∏–≤–æ–µ" : "–≥—Ä—É—Å—Ç–Ω–æ–µ"
    } –ª–∏—Ü–æ!\n–°—á–∞—Å—Ç—å–µ: ${Math.round(happiness * 100)}% –ì—Ä—É—Å—Ç—å: ${Math.round(
      sadness * 100
    )}%`
  );
});

trainBtn.addEventListener("click", () => {
  trainModel(trainData).then(() => {
    predictBtn.disabled = false; // –í–∫–ª—é—á–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –ø–æ—Å–ª–µ –æ–±—É—á–µ–Ω–∏—è
    alert("–Ø –æ–±—É—á–∏–ª—Å—è!"); // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ–±—É—á–µ–Ω–∏—è
  });
});

// –ù–∞—á–∞–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∏ canvas
updateInterface(); // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
clearCanvas(); // –û—á–∏—Å—Ç–∫–∞ canvas –∏ —Ä–∏—Å–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–∫–∏
