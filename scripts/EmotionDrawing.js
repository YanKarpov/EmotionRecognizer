// –ü–æ–ª—É—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ canvas –∏ –∫–Ω–æ–ø–æ–∫
const canvas = document.querySelector("#paintField"); // –≠–ª–µ–º–µ–Ω—Ç canvas –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è
const clearBtn = document.querySelector("#clear"); // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ canvas
const sadBtn = document.querySelector("#sad"); // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏ –≥—Ä—É—Å—Ç–Ω–æ–≥–æ —Ä–∏—Å—É–Ω–∫–∞
const happyBtn = document.querySelector("#happy"); // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏ —Å—á–∞—Å—Ç–ª–∏–≤–æ–≥–æ —Ä–∏—Å—É–Ω–∫–∞
const angryBtn = document.querySelector("#angry"); // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏ –∑–ª–æ–≥–æ —Ä–∏—Å—É–Ω–∫–∞
const surprisedBtn = document.querySelector("#surprised"); // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏ —É–¥–∏–≤–ª–µ–Ω–Ω–æ–≥–æ —Ä–∏—Å—É–Ω–∫–∞
const trainBtn = document.querySelector("#train"); // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏
const predictBtn = document.querySelector("#predict"); // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è —ç–º–æ—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–∏—Å—É–Ω–∫–∞

// –ö–æ–Ω—Ç–µ–∫—Å—Ç —Ä–∏—Å–æ–≤–∞–Ω–∏—è –Ω–∞ canvas
const ctx = canvas.getContext("2d");

// –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è (10x10 –ø–∏–∫—Å–µ–ª–µ–π)
const paintField = new Array(100).fill(false);

// –ú–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏
const trainData = [];

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
let mouseDown = false; // –§–ª–∞–≥ –Ω–∞–∂–∞—Ç–∏—è –º—ã—à–∏
let happyCount = 0; // –°—á–µ—Ç—á–∏–∫ —Å—á–∞—Å—Ç–ª–∏–≤—ã—Ö —Ä–∏—Å—É–Ω–∫–æ–≤
let sadCount = 0; // –°—á–µ—Ç—á–∏–∫ –≥—Ä—É—Å—Ç–Ω—ã—Ö —Ä–∏—Å—É–Ω–∫–æ–≤
let angryCount = 0; // –°—á–µ—Ç—á–∏–∫ –∑–ª—ã—Ö —Ä–∏—Å—É–Ω–∫–æ–≤
let surprisedCount = 0; // –°—á–µ—Ç—á–∏–∫ —É–¥–∏–≤–ª–µ–Ω–Ω—ã—Ö —Ä–∏—Å—É–Ω–∫–æ–≤

/**
 * –†–∏—Å—É–µ—Ç —Å–µ—Ç–∫—É –Ω–∞ canvas.
 */
function drawGrid() {
  ctx.strokeStyle = "#CCC"; // –¶–≤–µ—Ç –ª–∏–Ω–∏–π —Å–µ—Ç–∫–∏

  for (let i = 1; i < 10; i++) {
    // –†–∏—Å–æ–≤–∞–Ω–∏–µ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã—Ö –∏ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã—Ö –ª–∏–Ω–∏–π —Å–µ—Ç–∫–∏
    ctx.moveTo(0, i * 40);
    ctx.lineTo(400, i * 40);
    ctx.moveTo(i * 40, 0);
    ctx.lineTo(i * 40, 400);
  }

  ctx.stroke(); // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–∞ canvas
}

/**
 * –û—á–∏—â–∞–µ—Ç canvas –∏ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç —Å–µ—Ç–∫—É.
 */
function clearCanvas() {
  ctx.fillStyle = "#FFF"; // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–µ–ª–æ–≥–æ —Ñ–æ–Ω–∞
  ctx.fillRect(0, 0, 400, 400); // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Å–µ–≥–æ canvas –±–µ–ª—ã–º —Ü–≤–µ—Ç–æ–º
  drawGrid(); // –†–∏—Å–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–∫–∏
}

/**
 * –†–∏—Å—É–µ—Ç –∫–≤–∞–¥—Ä–∞—Ç –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π —è—á–µ–π–∫–µ –Ω–∞ canvas.
 * @param {number} row - –ù–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏ —è—á–µ–π–∫–∏
 * @param {number} column - –ù–æ–º–µ—Ä —Å—Ç–æ–ª–±—Ü–∞ —è—á–µ–π–∫–∏
 * @param {string} color - –¶–≤–µ—Ç –¥–ª—è –∑–∞–ª–∏–≤–∫–∏ –∫–≤–∞–¥—Ä–∞—Ç–∞
 */
function drawSquare(row, column, color) {
  ctx.fillStyle = color; // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ü–≤–µ—Ç–∞ –∑–∞–ª–∏–≤–∫–∏
  ctx.fillRect(column * 40 + 1, row * 40 + 1, 38, 38); // –†–∏—Å–æ–≤–∞–Ω–∏–µ –∫–≤–∞–¥—Ä–∞—Ç–∞ –≤ –∑–∞–¥–∞–Ω–Ω—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞—Ö
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è –Ω–∞ canvas –ø—Ä–∏ –¥–≤–∏–∂–µ–Ω–∏–∏ –º—ã—à–∏.
 * @param {MouseEvent} event - –°–æ–±—ã—Ç–∏–µ –º—ã—à–∏
 */
function draw(event) {
  // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫—É—Ä—Å–æ—Ä–∞ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —Ö–æ–ª—Å—Ç–∞
  const offsetX = Math.min(Math.max(event.offsetX, 0), 399);
  const offsetY = Math.min(Math.max(event.offsetY, 0), 399);

  const rowIndex = Math.floor(offsetY / 40); // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ø–æ –ø–æ–ª–æ–∂–µ–Ω–∏—é –º—ã—à–∏
  const columnIndex = Math.floor(offsetX / 40); // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ –ø–æ –ø–æ–ª–æ–∂–µ–Ω–∏—é –º—ã—à–∏
  const arrayIndex = rowIndex * 10 + columnIndex; // –ò–Ω–¥–µ–∫—Å –≤ –º–∞—Å—Å–∏–≤–µ paintField

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤—ã—Ö–æ–¥–∏—Ç –ª–∏ –∏–Ω–¥–µ–∫—Å –∑–∞ –≥—Ä–∞–Ω–∏—Ü—ã –º–∞—Å—Å–∏–≤–∞
  if (arrayIndex >= 0 && arrayIndex < paintField.length) {
    paintField[arrayIndex] = true; // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è true –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π —è—á–µ–π–∫–∏
    drawSquare(rowIndex, columnIndex, "green"); // –†–∏—Å–æ–≤–∞–Ω–∏–µ –∑–µ–ª–µ–Ω–æ–≥–æ –∫–≤–∞–¥—Ä–∞—Ç–∞ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —è—á–µ–π–∫–µ
  }
}

/**
 * –û—á–∏—â–∞–µ—Ç –ø–æ–ª–µ —Ä–∏—Å–æ–≤–∞–Ω–∏—è (paintField).
 */
function clearField() {
  paintField.fill(false); // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ false
  clearCanvas(); // –û—á–∏—Å—Ç–∫–∞ canvas
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–æ–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–∏—Å—É–Ω–∫–æ–≤ —Ä–∞–∑–Ω—ã—Ö —ç–º–æ—Ü–∏–π.
 */
function updateInterface() {
  happyBtn.innerText = `üòÄ ${happyCount}`; // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏ happy
  sadBtn.innerText = `üôÅ ${sadCount}`; // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏ sad
  angryBtn.innerText = `üò° ${angryCount}`; // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏ angry
  surprisedBtn.innerText = `üò≤ ${surprisedCount}`; // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏ surprised
}

/**
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–∏—Å—É–Ω–∫–∞ –∏ –µ–≥–æ –º–µ—Ç–∫—É –≤ –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö –æ–±—É—á–µ–Ω–∏—è.
 * @param {number[]} value - –ú–µ—Ç–∫–∞ —Ä–∏—Å—É–Ω–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, [1, 0, 0, 0] –¥–ª—è —Å—á–∞—Å—Ç–ª–∏–≤–æ–≥–æ)
 */
function storeResult(value) {
  trainData.push({ paintField: [...paintField], label: value }); // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –º–∞—Å—Å–∏–≤ trainData
  updateInterface(); // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
  clearField(); // –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –º—ã—à—å—é –∏ –∫–Ω–æ–ø–∫–∞–º–∏
document.addEventListener("mousedown", () => (mouseDown = true)); // –ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –º—ã—à–∏
document.addEventListener("mouseup", () => (mouseDown = false)); // –û—Ç–ø—É—Å–∫–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –º—ã—à–∏

canvas.addEventListener("mousemove", (e) => {
  if (mouseDown) draw(e); // –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∏—Å–æ–≤–∞–Ω–∏—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ –º—ã—à–∏
});

clearBtn.addEventListener("click", clearField); // –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è

happyBtn.addEventListener("click", () => {
  happyCount += 1; // –£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ —Å—á–∞—Å—Ç–ª–∏–≤—ã—Ö —Ä–∏—Å—É–Ω–∫–æ–≤
  storeResult([1, 0, 0, 0]); // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Ä–∏—Å—É–Ω–∫–∞ –∫–∞–∫ —Å—á–∞—Å—Ç–ª–∏–≤–æ–≥–æ
});

sadBtn.addEventListener("click", () => {
  sadCount += 1; // –£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –≥—Ä—É—Å—Ç–Ω—ã—Ö —Ä–∏—Å—É–Ω–∫–æ–≤
  storeResult([0, 1, 0, 0]); // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Ä–∏—Å—É–Ω–∫–∞ –∫–∞–∫ –≥—Ä—É—Å—Ç–Ω–æ–≥–æ
});

angryBtn.addEventListener("click", () => {
  angryCount += 1; // –£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –∑–ª—ã—Ö —Ä–∏—Å—É–Ω–∫–æ–≤
  storeResult([0, 0, 1, 0]); // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Ä–∏—Å—É–Ω–∫–∞ –∫–∞–∫ –∑–ª–æ–≥–æ
});

surprisedBtn.addEventListener("click", () => {
  surprisedCount += 1; // –£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ —É–¥–∏–≤–ª–µ–Ω–Ω—ã—Ö —Ä–∏—Å—É–Ω–∫–æ–≤
  storeResult([0, 0, 0, 1]); // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Ä–∏—Å—É–Ω–∫–∞ –∫–∞–∫ —É–¥–∏–≤–ª–µ–Ω–Ω–æ–≥–æ
});

predictBtn.addEventListener("click", () => {
  const inputTensor = preprocessDrawing(paintField); // –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ä–∏—Å—É–Ω–∫–∞ –≤ —Ç–µ–Ω–∑–æ—Ä
  const prediction = model.predict(inputTensor); // –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  const [happiness, sadness, anger, surprise] = prediction.dataSync(); // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è

  // –ú–∞—Å—Å–∏–≤ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ —ç–º–æ—Ü–∏–π
  const emotions = ["—Å—á–∞—Å—Ç–ª–∏–≤–æ–µ", "–≥—Ä—É—Å—Ç–Ω–æ–µ", "–∑–ª–æ–µ", "—É–¥–∏–≤–ª–µ–Ω–Ω–æ–µ"];
  // –ú–∞—Å—Å–∏–≤ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
  const scores = [happiness, sadness, anger, surprise];
  // –ò–Ω–¥–µ–∫—Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
  const maxIndex = scores.indexOf(Math.max(...scores));

  // –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
  alert(
    `–Ø –¥—É–º–∞—é —ç—Ç–æ ${emotions[maxIndex]} –ª–∏—Ü–æ!\n–°—á–∞—Å—Ç—å–µ: ${Math.round(happiness * 100)}% –ì—Ä—É—Å—Ç—å: ${Math.round(sadness * 100)}% –ó–ª–æ—Å—Ç—å: ${Math.round(anger * 100)}% –£–¥–∏–≤–ª–µ–Ω–∏–µ: ${Math.round(surprise * 100)}%`
  );
});

trainBtn.addEventListener("click", () => {
  trainModel(trainData).then(() => {
    predictBtn.disabled = false; // –ê–∫—Ç–∏–≤–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –ø–æ—Å–ª–µ –æ–±—É—á–µ–Ω–∏—è
    alert("–Ø –æ–±—É—á–∏–ª—Å—è!"); // –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ–±—É—á–µ–Ω–∏—è
  });
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∏ canvas –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
updateInterface(); // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
clearCanvas(); // –û—á–∏—Å—Ç–∫–∞ canvas –∏ —Ä–∏—Å–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–∫–∏



